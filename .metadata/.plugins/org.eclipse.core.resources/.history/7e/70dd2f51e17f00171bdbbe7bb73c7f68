import java.util.*;

public class FibonacciHuge {
    private static long getFibonacciHugeNaive(long n, long m) {
        if (n <= 1)
            return n;

        long previous = 0;
        long current  = 1;

        for (long i = 0; i < n - 1; ++i) {
            long tmp_previous = previous;
            previous = current;
            current = tmp_previous + current;
        }

        return current % m;
    }
    
    private static long getHuge(long n, long m) {
    	long arr[] = new long[(int)n+1];
    	arr[0] = 0;
        arr[1] = 1;
        for(int i = 2; i <= n ; i++){
            arr[i] = (arr[i-1]%m + arr[i-2]%m)%m;
            System.out.println(arr[(int)n%(i-1)]);
            if(arr[i-1] == 0 && arr[i] == 1) return arr[(int)n%(i-1)];
        }
        return arr[(int)n]%m;
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long n = scanner.nextLong();
        long m = scanner.nextLong();
        //System.out.println(getFibonacciHugeNaive(n, m));
        System.out.println(getHuge(n, m));
    }
}

