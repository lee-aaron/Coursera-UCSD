import java.util.*;

public class FibonacciSumLastDigit {
    private static long getFibonacciSumNaive(long n) {
        if (n <= 1)
            return n;

        long previous = 0;
        long current  = 1;
        long sum      = 1;

        for (long i = 0; i < n - 1; ++i) {
            long tmp_previous = previous;
            previous = current;
            current = tmp_previous + current;
            sum += current;
        }

        return sum % 10;
    }
    
    private static long fibSum(int n) {
  	  if(n <= 1) return n;
  	  long arr[] = new long[n+1];
  	  long sum = 1;
  	  arr[0] = 0;
  	  arr[1] = 1;
  	  for(int i = 2; i <= n; i++)
  	  {
  		  arr[i] = arr[i-1] + arr[i-2];
  		  sum = arr[i];
  	  }
  	  return sum;
    }
    
    private static int getLastDigit(long n) {
    	return (int) (n%10);
    }
    
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        long n = scanner.nextLong();
        //long s = getFibonacciSumNaive(n);
        //System.out.println(s);
        System.out.println(fibSum((int) n));
        System.out.println(getLastDigit(fibSum((int) n)));
    }
}

