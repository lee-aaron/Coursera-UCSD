import java.io.*;
import java.util.*;

public class Sorting {
	private static Random random = new Random();

	private static int[] partition3(int[] a, int l, int r) {
		// write your code here
		int x = a[l], m1 = l, m2 = r;
		/*
		 * for(int i = l+1; i <= r; i++) { if(a[i] < x) { m1 = l; break; //a =
		 * swap(a, m1++, i); } else if(a[i] > x ) { m1 = i; break; //a = swap(a,
		 * i, m2--); } else { m2 = i; } }
		 */
		// Partition
		int count = 0;
		System.out.print("Begin: " + " Pivot: " + x + " | ");
		for (int i = l; i <= r; i++) {
			System.out.print(a[i] + " ");
		}
		System.out.println();
		do {
			a = swap(a, m1, m2);
			System.out.print("Swap: ");
			for (int j = l; j <= r; j++) {
				System.out.print(a[j] + " ");
			}
			System.out.println();
			while (a[m1] < x) {
				System.out.println("m1: " + m1);
				m1++;
			}
			while (a[m2] > x) {
				System.out.println("m2: " + m2);
				m2--;
			}
		} while(m1 <= m2);
		System.out.print("End: ");
		for (int i = 0; i <= r; i++) {
			System.out.print(a[i] + " ");
		}
		System.out.println();
		System.out.println();
		return new int[] { m1, m2 };
	}

	private static int[] swap(int[] a, int indexOne, int indexTwo) {
		int temp = a[indexOne];
		a[indexOne] = a[indexTwo];
		a[indexTwo] = temp;
		return a;
	}

	private static int partition2(int[] a, int l, int r) {
		int x = a[l];
		int j = l;
		for (int i = l + 1; i <= r; i++) {
			if (a[i] <= x) {
				j++;
				int t = a[i];
				a[i] = a[j];
				a[j] = t;
			}
		}
		int t = a[l];
		a[l] = a[j];
		a[j] = t;
		return j;
	}

	private static void randomizedQuickSort(int[] a, int l, int r) {
		if (l >= r) {
			return;
		}
		int k = 4;
		//int k = random.nextInt(r - l + 1) + l;
		int t = a[l];
		a[l] = a[k];
		a[k] = t;
		// use partition3
		int m[] = partition3(a, l, r);
		randomizedQuickSort(a, l, m[0] - 1);
		randomizedQuickSort(a, m[1] + 1, r);
	}

	public static void main(String[] args) {
		FastScanner scanner = new FastScanner(System.in);
		/*int n = scanner.nextInt();
		int[] a = new int[n];
		for (int i = 0; i < n; i++) {
			a[i] = scanner.nextInt();
		}*/
		int n = 10;
		int a[] = {3, 1, 4, 1, 5, 9, 2, 6, 5, 3};
		randomizedQuickSort(a, 0, n - 1);
		for (int i = 0; i < n; i++) {
			System.out.print(a[i] + " ");
		}
	}

	static class FastScanner {
		BufferedReader br;
		StringTokenizer st;

		FastScanner(InputStream stream) {
			try {
				br = new BufferedReader(new InputStreamReader(stream));
			} catch (Exception e) {
				e.printStackTrace();
			}
		}

		String next() {
			while (st == null || !st.hasMoreTokens()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}
	}
}
